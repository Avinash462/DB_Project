-- Table Creation

-- Create Database
CREATE DATABASE OnlineFoodOrdering;
USE OnlineFoodOrdering;

-- City Table
CREATE TABLE City (
    Zip_Code VARCHAR(10) PRIMARY KEY,
    City VARCHAR(50) NOT NULL
);

-- Customers Table
CREATE TABLE Customers (
    Customer_ID INT IDENTITY(1,1) PRIMARY KEY,
    First_Name VARCHAR(50) NOT NULL,
    Last_Name VARCHAR(50) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Address VARCHAR(255) NOT NULL,
    Zip_Code VARCHAR(10) NOT NULL,
    FOREIGN KEY (Zip_Code) REFERENCES City(Zip_Code) ON DELETE CASCADE
);

-- Customer Phone Numbers (Bridge Table)
CREATE TABLE Customer_PhoneNumber (
    Customer_ID INT NOT NULL,
    Phone_Number VARCHAR(15) NOT NULL,
    PRIMARY KEY (Customer_ID, Phone_Number),
    FOREIGN KEY (Customer_ID) REFERENCES Customers(Customer_ID) ON DELETE CASCADE
);

-- Restaurants Table
CREATE TABLE Restaurants (
    Restaurant_ID INT IDENTITY(1,1) PRIMARY KEY,
    Name VARCHAR(70) NOT NULL UNIQUE,
    Cuisine VARCHAR(50) NOT NULL,
    Location VARCHAR(255) NOT NULL,
    Zip_Code VARCHAR(10) NOT NULL,
    Rating DECIMAL(2,1) CHECK (Rating BETWEEN 1.0 AND 5.0),
    FOREIGN KEY (Zip_Code) REFERENCES City(Zip_Code) ON DELETE CASCADE
);

-- Menu Items Table (Fixed ENUM issue)
CREATE TABLE Menu_Items (
    Menu_Item_ID INT IDENTITY(1,1) PRIMARY KEY,
    Restaurant_ID INT NOT NULL,
    Name VARCHAR(50) NOT NULL,
    Price DECIMAL(10,2) CHECK (Price >= 0),
    Availability VARCHAR(15) DEFAULT 'Available',
    CHECK (Availability IN ('Available', 'Unavailable')), -- Replaces ENUM
    FOREIGN KEY (Restaurant_ID) REFERENCES Restaurants(Restaurant_ID) ON DELETE CASCADE
);

-- Orders Table (Fixed ENUM issue)
CREATE TABLE Orders (
    Order_ID INT IDENTITY(1,1) PRIMARY KEY,
    Customer_ID INT NOT NULL,
    Order_Date DATETIME DEFAULT GETDATE(),
    Order_Status VARCHAR(20) DEFAULT 'Pending',
    CHECK (Order_Status IN ('Pending', 'Preparing', 'Out for Delivery', 'Delivered', 'Cancelled')), -- Replaces ENUM
    Total_Cost DECIMAL(10,2) CHECK (Total_Cost >= 0),
    FOREIGN KEY (Customer_ID) REFERENCES Customers(Customer_ID) ON DELETE CASCADE
);

-- Order Details Table (1:1 relationship with Orders)
CREATE TABLE Order_Details (
    Order_ID INT PRIMARY KEY,
    Restaurant_ID INT NOT NULL,
    FOREIGN KEY (Order_ID) REFERENCES Orders(Order_ID) ON DELETE CASCADE,
    FOREIGN KEY (Restaurant_ID) REFERENCES Restaurants(Restaurant_ID) ON DELETE CASCADE
);

-- Order Items (Bridge Table)
CREATE TABLE Order_Items (
    Order_Item_ID INT IDENTITY(1,1) PRIMARY KEY,
    Order_ID INT NOT NULL,
    Menu_Item_ID INT NOT NULL,
    Quantity INT CHECK (Quantity > 0),
    FOREIGN KEY (Order_ID) REFERENCES Orders(Order_ID) ON DELETE CASCADE,
    FOREIGN KEY (Menu_Item_ID) REFERENCES Menu_Items(Menu_Item_ID) ON DELETE CASCADE
);

-- Payment Methods Table
CREATE TABLE Payment_Methods (
    Payment_Method_ID INT IDENTITY(1,1) PRIMARY KEY,
    Payment_Method VARCHAR(50) UNIQUE NOT NULL
);

-- Payments Table (Fixed ENUM issue)
CREATE TABLE Payments (
    Payment_ID INT IDENTITY(1,1) PRIMARY KEY,
    Order_ID INT NOT NULL,
    Payment_Method_ID INT NOT NULL,
    Amount DECIMAL(10,2) CHECK (Amount >= 0),
    Status VARCHAR(20) DEFAULT 'Pending',
    CHECK (Status IN ('Completed', 'Pending', 'Failed')), -- Replaces ENUM
    FOREIGN KEY (Order_ID) REFERENCES Orders(Order_ID) ON DELETE CASCADE,
    FOREIGN KEY (Payment_Method_ID) REFERENCES Payment_Methods(Payment_Method_ID) ON DELETE CASCADE
);

-- Delivery Personnel Table
CREATE TABLE Delivery_Personnel (
    Delivery_ID INT IDENTITY(1,1) PRIMARY KEY,
    Name VARCHAR(50) NOT NULL,
    Phone_Number VARCHAR(15) UNIQUE NOT NULL,
    Vehicle_Type VARCHAR(20) NOT NULL
);

-- Reviews Table
CREATE TABLE Reviews_Ratings (
    Review_ID INT IDENTITY(1,1) PRIMARY KEY,
    Customer_ID INT NOT NULL,
    Restaurant_ID INT NOT NULL,
    Comments TEXT,
    Rating DECIMAL(2,1) CHECK (Rating BETWEEN 1.0 AND 5.0),
    FOREIGN KEY (Customer_ID) REFERENCES Customers(Customer_ID) ON DELETE CASCADE,
    FOREIGN KEY (Restaurant_ID) REFERENCES Restaurants(Restaurant_ID) ON DELETE CASCADE
);




-- Insert Statements

INSERT INTO City (Zip_Code, City) VALUES
('10001', 'New York'),
('60601', 'Chicago'),
('90001', 'Los Angeles'),
('94101', 'San Francisco'),
('75201', 'Dallas');

INSERT INTO Customers (First_Name, Last_Name, Email, Address, Zip_Code) VALUES
('John', 'Doe', 'john.doe@email.com', '123 Main St', '10001'),
('Jane', 'Smith', 'jane.smith@email.com', '456 Oak St', '60601'),
('Michael', 'Johnson', 'michael.j@email.com', '789 Pine St', '90001'),
('Emily', 'Davis', 'emily.d@email.com', '321 Elm St', '94101'),
('Daniel', 'Brown', 'daniel.b@email.com', '654 Maple St', '75201');


INSERT INTO Customer_PhoneNumber (Customer_ID, Phone_Number) VALUES
(1, '555-1234'),
(1, '555-5678'),
(2, '555-8765'),
(3, '555-4321'),
(4, '555-6789');


INSERT INTO Restaurants (Name, Cuisine, Location, Zip_Code, Rating) VALUES
('Pizza Palace', 'Italian', '123 Pizza Ave', '10001', 4.5),
('Sushi World', 'Japanese', '456 Sushi Blvd', '60601', 4.7),
('Taco Town', 'Mexican', '789 Taco St', '90001', 4.3),
('Burger Haven', 'American', '321 Burger Rd', '94101', 4.2),
('Vegan Delight', 'Vegan', '654 Healthy Ln', '75201', 4.6);


INSERT INTO Menu_Items (Restaurant_ID, Name, Price, Availability) VALUES
(1, 'Margherita Pizza', 12.99, 'Available'),
(1, 'Pepperoni Pizza', 14.99, 'Available'),
(2, 'California Roll', 10.99, 'Available'),
(2, 'Spicy Tuna Roll', 11.99, 'Unavailable'),
(3, 'Taco Supreme', 8.99, 'Available');


INSERT INTO Orders (Customer_ID, Order_Date, Order_Status, Total_Cost) VALUES
(1, '2024-02-15 18:30:00', 'Delivered', 25.98),
(2, '2024-02-16 19:45:00', 'Preparing', 21.98),
(3, '2024-02-17 12:15:00', 'Out for Delivery', 8.99);


INSERT INTO Order_Items (Order_ID, Menu_Item_ID, Quantity) VALUES
(1, 1, 2),
(2, 3, 1),
(2, 4, 1),
(3, 5, 1);


INSERT INTO Payment_Methods (Payment_Method) VALUES
('Credit Card'),
('Debit Card'),
('PayPal'),
('Cash on Delivery');


INSERT INTO Payments (Order_ID, Payment_Method_ID, Amount, Status) VALUES
(1, 1, 25.98, 'Completed'),
(2, 2, 21.98, 'Pending'),
(3, 4, 8.99, 'Completed');


INSERT INTO Delivery_Personnel (Name, Phone_Number, Vehicle_Type) VALUES
('James Walker', '555-2468', 'Car'),
('Sarah Adams', '555-1357', 'Bike');


INSERT INTO Reviews_Ratings (Customer_ID, Restaurant_ID, Comments, Rating) VALUES
(1, 1, 'Delicious pizza, fast delivery!', 5.0),
(2, 2, 'Great sushi, but a little expensive.', 4.5),
(3, 3, 'Tacos were fresh and tasty!', 4.8);

INSERT INTO Order_Details (Order_ID, Restaurant_ID) VALUES
(1, 1),  -- Order 1 is from Pizza Palace
(2, 2),  -- Order 2 is from Sushi World
(3, 3);  -- Order 3 is from Taco Town



-- Select Statements

SELECT * FROM City; 
SELECT * FROM Customers; 
SELECT * FROM Customer_PhoneNumber; 
SELECT * FROM Restaurants; 
SELECT * FROM Menu_Items; 
SELECT * FROM Orders; 
SELECT * FROM Order_Items; 
SELECT * FROM Payment_Methods; 
SELECT * FROM Payments; 
SELECT * FROM Delivery_Personnel; 
SELECT * FROM Reviews_Ratings;

